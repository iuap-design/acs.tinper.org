import React, { Component } from 'react';
import ReactDOM from 'react-dom';
import { Con, Row, Col } from 'bee-layout';
import { Panel } from 'bee-panel';
import Drawer from 'bee-drawer';
import Clipboard from 'bee-clipboard'; 
import './demo.scss';


import Demo1 from "./demolist/Demo1";import Demo2 from "./demolist/Demo2";import Demo3 from "./demolist/Demo3";import Demo4 from "./demolist/Demo4";
var DemoArray = [{"example":<Demo1 />,"title":" 基础示例1","code":"/**\n *\n * @title 基础示例1\n * @description 单选\n *\n */\n\nimport React, { Component } from 'react';\n\nimport Form from \"bee-form\";\nimport RefComboBoxBaseUI, { ComboStore,ComboItem } from 'ref-combobox';\nimport '../../src/index.less';\nimport Button from 'bee-button';\nimport 'bee-button/build/Button.css';\nimport Icon from 'bee-icon';\nimport 'bee-icon/build/Icon.css';\nimport request from '../../src/utils/request';\n\nclass Demo1 extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          loading:false,\n          currPageIndex:1,\n          value :'{\"refpk\":\"be400fd7-afeb-47de-978d-1c47be4a72c3\",\"refname\":\"能有\"}',  //M0000000000002\n          storeData:[],\n          searchValue:'',\n        };\n      }\n    /**\n     * @msg: 请求mock数据\n     */\n    loadData = async () => {\n        this.setState({\n          loading:true,\n        })\n        let ajax={\n            url: 'https://mock.yonyoucloud.com/mock/1264/pap_basedoc/common-ref/blobRefCombobox',\n\n        };\n        let { currPageIndex,searchValue } = this.state;\n        if (!ajax.params) ajax.params = {};\n        ajax.params.page = currPageIndex;\n        ajax.params['refClientPageInfo.currPageIndex'] = currPageIndex\n        ajax.params['refClientPageInfo.pageSize'] = 10;\n        ajax.params['content'] = searchValue;\n        let results = await request(ajax);\n        let storeData = [];\n        if (!results || !results.data.length){\n          this.setState({ \n            loading:false,\n            pageCount:-1,//不展示分页\n            totalElements:0,\n            storeData,\n          });\n          return false;\n        }\n        storeData = results.data;\n        let page = results.page;\n        this.setState({ \n          storeData,\n           ...page,\n           loading:false \n        });\n        \n    }\n    /**\n     * @msg: 下拉状态改变，用来初始化数据\n     * @param {type}  bool\n     * @return: \n     */\n    onPopupVisibleChange = (open) =>{\n        if(open&&!this.state.storeData.length){\n            this.loadData();\n        }\n    }\n    /**\n     * @msg: selector数值发生改变\n     * @param {type}\n     * @return: \n     */\n    onSelectorChange=(id, item, status, selectedArray)=>{\n      console.log('selector数值发生改变',id, item, status, selectedArray)\n    }\n    /**\n     * @msg: 搜索\n     * @param {type} \n     * @return: \n     */\n    onSearch  = (value) =>{\n        console.log('搜索',value)\n        this.setState({\n          searchValue:value\n        },()=>{\n            this.loadData()\n        })\n    }\n   /**\n     * @msg: 分页跳转\n     * @param {type} \n     * @return: \n     */\n    onPaginationSelect = (currPageIndex) =>{\n        console.log('分页跳转',currPageIndex);\n        this.setState({\n            currPageIndex:currPageIndex\n        },()=>{\n            this.loadData()\n        })\n    }\n    render() {\n        const { getFieldError, getFieldProps } = this.props.form;\n        let {searchValue,currPageIndex,storeData,loading} = this.state;\n        return (\n            <div className=\"demoPadding\">\n                <RefComboBoxBaseUI\n                    displayField={(record)=>{return `${record.refname}-haha`}}\n                    inputDisplay={item=>{return `我们的:${item.refname}`}}\n                    valueField={'refpk'}\n                    lang={'zh_CN'}\n                    loading={loading}\n                    storeData={storeData}\n                    onSelectorChange={this.onSelectorChange}\n                    onPaginationSelect={this.onPaginationSelect}\n                    onSearch={this.onSearch}\n                    pageCount={5}\n                    currPageIndex={currPageIndex}\n                    searchValue={searchValue}\n                    onPopupVisibleChange={this.onPopupVisibleChange}\n                    {...getFieldProps('combobox', {\n                        initialValue:this.state.value,  //M0000000000002\n                        rules: [{\n                            message: '提示：请选择',\n                            pattern: /[^{\"refname\":\"\",\"refpk\":\"\"}|{\"refpk\":\"\",\"refname\":\"\"}]/\n                        }]\n                    })}\n\n                >\n                </RefComboBoxBaseUI>\n                \n                <Button\n                    colors=\"primary\"\n                    onClick={() => {\n                        this.props.form.validateFields((err, values) => {\n                            if (err) {\n                                alert(\"\" + JSON.stringify(err));\n                                return false;\n                            }\n                            alert(\"\" + JSON.stringify(values))\n                        });\n                    }}>\n                    提交\n            </Button>\n            <span  className=\"error-tip\" style={{ color: 'red' }}>\n                    {getFieldError('combobox')}\n                </span>\n            </div>\n        )\n    }\n}\n\n\n\n","desc":" 单选"},{"example":<Demo2 />,"title":" 基础示例1","code":"/**\n *\n * @title 基础示例1\n * @description 多选\n *\n */\n\nimport React, { Component } from 'react';\n\nimport Form from \"bee-form\";\nimport RefComboBoxBaseUI  from 'ref-combobox';\nimport '../../src/index.less';\nimport Button from 'bee-button';\nimport 'bee-button/build/Button.css';\nimport Icon from 'bee-icon';\nimport 'bee-icon/build/Icon.css';\nimport request from '../../src/utils/request';\n\nclass Demo2 extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          loading:false,\n          currPageIndex:1,\n          value :[{code:'001',name: \"用友集团\",refcode: \"001\"},{code: \"dfs\",name: \"sdf\",refcode: \"dfs\"}],  //M0000000000002\n          storeData:[],\n          searchValue:'',\n        };\n      }\n    /**\n     * @msg: 请求mock数据\n     */\n    loadData = async () => {\n        this.setState({\n          loading:true,\n        })\n        let ajax={\n            url: 'https://mock.yonyoucloud.com/mock/1264/pap_basedoc/common-ref/blobRefCombobox',\n\n        };\n        let { currPageIndex,searchValue } = this.state;\n        if (!ajax.params) ajax.params = {};\n        ajax.params.page = currPageIndex;\n        ajax.params['refClientPageInfo.currPageIndex'] = currPageIndex\n        ajax.params['refClientPageInfo.pageSize'] = 10;\n        ajax.params['content'] = searchValue;\n        let results = await request(ajax);\n        let storeData = [];\n        if (!results || !results.data.length){\n          this.setState({ \n            loading:false,\n            pageCount:-1,//不展示分页\n            totalElements:0,\n            storeData,\n          });\n          return false;\n        }\n        storeData = results.data;\n        let page = results.page;\n        this.setState({ \n          storeData,\n           ...page,\n           loading:false \n        });\n        \n    }\n    /**\n     * @msg: 下拉状态改变，用来初始化数据\n     * @param {type}  bool\n     * @return: \n     */\n    onPopupVisibleChange = (open) =>{\n        if(open&&!this.state.storeData.length){\n            this.loadData();\n        }\n    }\n    /**\n     * @msg: selector数值发生改变\n     * @param {type}\n     * @return: \n     */\n    onSelectorChange=(id, item, status, selectedArray)=>{\n      console.log('selector数值发生改变',id, item, status, selectedArray)\n    }\n    /**\n     * @msg: 搜索\n     * @param {type} \n     * @return: \n     */\n    onSearch  = (value) =>{\n        console.log('搜索',value)\n        this.setState({\n          searchValue:value\n        },()=>{\n            this.loadData()\n        })\n    }\n   /**\n     * @msg: 分页跳转\n     * @param {type} \n     * @return: \n     */\n    onPaginationSelect = (currPageIndex) =>{\n        console.log('分页跳转',currPageIndex);\n        this.setState({\n            currPageIndex:currPageIndex\n        },()=>{\n            this.loadData()\n        })\n    }\n    render() {\n        const { getFieldError, getFieldProps } = this.props.form;\n        let {searchValue,currPageIndex,storeData,loading} = this.state;\n        return (\n            <div className=\"demoPadding\">\n                <RefComboBoxBaseUI\n                    multiple\n                    displayField={(record)=>{return `${record.refname}-haha`}}\n                    inputDisplay={item=>{return `${item.name}-la-${item.code}`}}\n                    valueField={'code'}\n                    lang={'zh_CN'}\n                    loading={loading}\n                    storeData={storeData}\n                    onSelectorChange={this.onSelectorChange}\n                    onPaginationSelect={this.onPaginationSelect}\n                    onSearch={this.onSearch}\n                    pageCount={5}\n                    currPageIndex={currPageIndex}\n                    searchValue={searchValue}\n                    onPopupVisibleChange={this.onPopupVisibleChange}\n                    {...getFieldProps('combobox2', {\n                        initialValue:this.state.value,  //M0000000000002\n                        rules: [{\n                            message: '提示：请选择',\n                            pattern: /[^{\"refname\":\"\",\"refpk\":\"\"}|{\"refpk\":\"\",\"refname\":\"\"}]/\n                        }]\n                    })}\n\n                >\n                </RefComboBoxBaseUI>\n                \n                <Button\n                    colors=\"primary\"\n                    onClick={() => {\n                        this.props.form.validateFields((err, values) => {\n                            if (err) {\n                                alert(\"\" + JSON.stringify(err));\n                                return false;\n                            }\n                            alert(\"\" + JSON.stringify(values))\n                        });\n                    }}>\n                    提交\n            </Button>\n            <span  className=\"error-tip\" style={{ color: 'red' }}>\n                    {getFieldError('combobox2')}\n                </span>\n            </div>\n        )\n    }\n}\n\n\n\n","desc":" 多选"},{"example":<Demo3 />,"title":" 基础示例3","code":"/**\n *\n * @title 基础示例3\n * @description 清空功能，纯ref-combobox\n *\n */\n\nimport React, { Component } from 'react';\n\nimport Form from \"bee-form\";\nimport RefComboBoxBaseUI, { ComboStore, ComboItem } from 'ref-combobox';\nimport '../../src/index.less';\nimport Icon from 'bee-icon';\nimport 'bee-icon/build/Icon.css';\nimport Button from 'bee-button';\nimport 'bee-button/build/Button.css';\nimport request from '../../src/utils/request';\n\nlet op = {\n  valueField: 'refcode',\n  displayField: (record) => {\n    return <div > <Icon type=\"uf-personin-o\" style={{ color: 'red' }} /> {record.refname}-{record.refcode}-{record.type}</div>\n  },\n}\nclass Demo3 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      currPageIndex: 1,\n      value: '{\"refpk\":\"be400fd7-afeb-47de-978d-1c47be4a72c3\",\"refname\":\"能有33\"}',  //M0000000000002\n      storeData: [],\n      searchValue: '',\n    };\n  }\n  /**\n   * @msg: 请求mock数据\n   */\n  loadData = async () => {\n    this.setState({\n      loading: true,\n    })\n    let ajax = {\n      url: 'https://mock.yonyoucloud.com/mock/1264/pap_basedoc/common-ref/blobRefCombobox',\n\n    };\n    let { currPageIndex, searchValue } = this.state;\n    if (!ajax.params) ajax.params = {};\n    ajax.params.page = currPageIndex;\n    ajax.params['refClientPageInfo.currPageIndex'] = currPageIndex\n    ajax.params['refClientPageInfo.pageSize'] = 10;\n    ajax.params['content'] = searchValue;\n    let results = await request(ajax);\n    let storeData = [];\n    if (!results || !results.data.length) {\n      this.setState({\n        loading: false,\n        pageCount: -1,//不展示分页\n        totalElements: 0,\n        storeData,\n      });\n      return false;\n    }\n    storeData = results.data;\n    let page = results.page;\n    this.setState({\n      storeData,\n      ...page,\n      loading: false\n    });\n\n  }\n  /**\n   * @msg: 下拉状态改变，用来初始化数据\n   * @param {type}  bool\n   * @return: \n   */\n  onPopupVisibleChange = (open) => {\n    if (open && !this.state.storeData.length) {\n      this.loadData();\n    }\n  }\n  /**\n   * @msg: selector数值发生改变\n   * @param {type}\n   * @return: \n   */\n  onSelectorChange = (id, item, status, selectedArray) => {\n    console.log('selector数值发生改变', id, item, status, selectedArray);\n    this.setState({\n      value:selectedArray,//可以改成数组，或者继续拼接成字符串\n    })\n  }\n  /**\n   * @msg: 搜索\n   * @param {type} \n   * @return: \n   */\n  onSearch = (value) => {\n    console.log('搜索', value)\n    this.setState({\n      searchValue: value\n    }, () => {\n      this.loadData()\n    })\n  }\n  /**\n    * @msg: 分页跳转\n    * @param {type} \n    * @return: \n    */\n  onPaginationSelect = (currPageIndex) => {\n    console.log('分页跳转', currPageIndex);\n    this.setState({\n      currPageIndex: currPageIndex\n    }, () => {\n      this.loadData()\n    })\n  }\n  /**\n   * @msg: 清空功能\n   * @param {type} \n   * @return: \n   */\n  clearFunc = () =>{\n    this.setState({\n      value:null\n    })\n  }\n  render() {\n    let { searchValue, currPageIndex, storeData, loading } = this.state;\n    return (\n      <div className=\"demoPadding\">\n        <RefComboBoxBaseUI\n          displayField={(record) => { return `${record.refname}-haha` }}\n          inputDisplay={item => { return `我们的:${item.refname}` }}\n          valueField={'refpk'}\n          lang={'zh_CN'}\n          loading={loading}\n          storeData={storeData}\n          onSelectorChange={this.onSelectorChange}\n          onPaginationSelect={this.onPaginationSelect}\n          onSearch={this.onSearch}\n          pageCount={5}\n          currPageIndex={currPageIndex}\n          searchValue={searchValue}\n          onPopupVisibleChange={this.onPopupVisibleChange}\n          value={this.state.value}\n        >\n        </RefComboBoxBaseUI>\n        <Button\n          colors=\"primary\"\n          onClick={this.clearFunc}>\n          清空\n         </Button>\n      </div>\n    )\n  }\n}\n\n\n\n","desc":" 清空功能，纯ref-combobox"},{"example":<Demo4 />,"title":" 基础示例4","code":"/**\n *\n * @title 基础示例4\n * @description 清空功能，配合表单使用\n *\n */\n\nimport React, { Component } from 'react';\n\nimport Form from \"bee-form\";\nimport RefComboBoxBaseUI  from 'ref-combobox';\nimport '../../src/index.less';\nimport Button from 'bee-button';\nimport 'bee-button/build/Button.css';\nimport Icon from 'bee-icon';\nimport 'bee-icon/build/Icon.css';\nimport request from '../../src/utils/request';\n\nclass Demo2 extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          loading:false,\n          currPageIndex:1,\n          value :[{code:'001',name: \"用友集团\",refcode: \"001\"},{code: \"dfs\",name: \"sdf\",refcode: \"dfs\"}],  //M0000000000002\n          storeData:[],\n          searchValue:'',\n        };\n      }\n    /**\n     * @msg: 请求mock数据\n     */\n    loadData = async () => {\n        this.setState({\n          loading:true,\n        })\n        let ajax={\n            url: 'https://mock.yonyoucloud.com/mock/1264/pap_basedoc/common-ref/blobRefCombobox',\n\n        };\n        let { currPageIndex,searchValue } = this.state;\n        if (!ajax.params) ajax.params = {};\n        ajax.params.page = currPageIndex;\n        ajax.params['refClientPageInfo.currPageIndex'] = currPageIndex\n        ajax.params['refClientPageInfo.pageSize'] = 10;\n        ajax.params['content'] = searchValue;\n        let results = await request(ajax);\n        let storeData = [];\n        if (!results || !results.data.length){\n          this.setState({ \n            loading:false,\n            pageCount:-1,//不展示分页\n            totalElements:0,\n            storeData,\n          });\n          return false;\n        }\n        storeData = results.data;\n        let page = results.page;\n        this.setState({ \n          storeData,\n           ...page,\n           loading:false \n        });\n        \n    }\n    /**\n     * @msg: 下拉状态改变，用来初始化数据\n     * @param {type}  bool\n     * @return: \n     */\n    onPopupVisibleChange = (open) =>{\n        if(open&&!this.state.storeData.length){\n            this.loadData();\n        }\n    }\n    /**\n     * @msg: selector数值发生改变\n     * @param {type}\n     * @return: \n     */\n    onSelectorChange=(id, item, status, selectedArray)=>{\n      console.log('selector数值发生改变',id, item, status, selectedArray)\n    }\n    /**\n     * @msg: 搜索\n     * @param {type} \n     * @return: \n     */\n    onSearch  = (value) =>{\n        console.log('搜索',value)\n        this.setState({\n          searchValue:value\n        },()=>{\n            this.loadData()\n        })\n    }\n   /**\n     * @msg: 分页跳转\n     * @param {type} \n     * @return: \n     */\n    onPaginationSelect = (currPageIndex) =>{\n        console.log('分页跳转',currPageIndex);\n        this.setState({\n            currPageIndex:currPageIndex\n        },()=>{\n            this.loadData()\n        })\n    }\n    /**\n     * @msg: 清空\n     * @param {type} \n     * @return: \n     */\n    clearFunc = () =>{\n        this.props.form.setFieldsValue({combobox4:''})\n    }\n    render() {\n        const { getFieldError, getFieldProps } = this.props.form;\n        let {searchValue,currPageIndex,storeData,loading} = this.state;\n        return (\n            <div className=\"demoPadding\">\n                <RefComboBoxBaseUI\n                    multiple\n                    displayField={(record)=>{return `${record.refname}-haha`}}\n                    inputDisplay={item=>{return `${item.name}`}}\n                    valueField={'code'}\n                    lang={'zh_CN'}\n                    loading={loading}\n                    storeData={storeData}\n                    onSelectorChange={this.onSelectorChange}\n                    onPaginationSelect={this.onPaginationSelect}\n                    onSearch={this.onSearch}\n                    pageCount={5}\n                    currPageIndex={currPageIndex}\n                    searchValue={searchValue}\n                    onPopupVisibleChange={this.onPopupVisibleChange}\n                    {...getFieldProps('combobox4', {\n                        initialValue:this.state.value,  //M0000000000002\n                        rules: [{\n                            message: '提示：请选择',\n                            pattern: /[^{\"refname\":\"\",\"refpk\":\"\"}|{\"refpk\":\"\",\"refname\":\"\"}]/\n                        }]\n                    })}\n\n                >\n                </RefComboBoxBaseUI>\n                <Button\n                    colors=\"primary\"\n                    onClick={this.clearFunc}>\n                    清空\n            </Button>\n            <span  className=\"error-tip\" style={{ color: 'red' }}>\n                    {getFieldError('combobox4')}\n                </span>\n            </div>\n        )\n    }\n}\n\n\n\n","desc":" 清空功能，配合表单使用"}]


class Demo extends Component {
    constructor(props){
        super(props);
        this.state = {
            open: false
        }
    }
    handleClick=()=> {
        this.setState({ open: !this.state.open })
    }
    fCloseDrawer=()=>{
        this.setState({
            open: false
        })
    }

    render () {
        const { title, example, code, desc, scss_code  } = this.props;

        const header = (
            <div>
                <p className='component-title'>{ title }</p>
                <p>{ desc }</p>
                <span className='component-code' onClick={this.handleClick}> 查看源码 <i className='uf uf-arrow-right'/> </span>
            </div>
        );
        return (
            <Col md={12} id={title.trim()} className='component-demo'>
            <Panel header={header}>
                {example}
            </Panel>
           
            <Drawer className='component-drawerc' title={title} show={this.state.open} placement='right' onClose={this.fCloseDrawer}>
            <div className='component-code-copy'> JS代码 
                <Clipboard action="copy" text={code}/>
            </div>
            <pre className="pre-js">
                <code className="hljs javascript">{ code.replace('../../src/index.less',COMPONENT+'/lib/index.css').replace('../../src/index.js',COMPONENT).replace('../../src/index',COMPONENT).replace('../../src',COMPONENT) }</code>
            </pre >
            {!!scss_code ?<div className='component-code-copy copy-css'> SCSS代码 
                <Clipboard action="copy" text={scss_code}/>
            </div>:null }
                { !!scss_code ? <pre className="pre-css">
                 <code className="hljs css">{ scss_code }</code>
                 </pre> : null }
            </Drawer>
        </Col>
    )
    }
}

class DemoGroup extends Component {
    constructor(props){
        super(props)
    }
    render () {
        return (
            <Row>
            {DemoArray.map((child,index) => {

                return (
            <Demo example= {child.example} title= {child.title} code= {child.code} scss_code= {child.scss_code} desc= {child.desc} key= {index}/>
    )

    })}
    </Row>
    )
    }
}

ReactDOM.render(<DemoGroup/>, document.getElementById('root'));
